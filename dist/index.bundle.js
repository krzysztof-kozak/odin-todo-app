(()=>{"use strict";var t={538:(t,e,n)=>{n.d(e,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),s=n.n(i)()(r());s.push([t.id,"/* Source: https://css-tricks.com/an-interview-with-elad-shechter-on-the-new-css-reset/ */\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n\tall: unset;\n\tdisplay: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n\n/*\n        Remove list styles (bullets/numbers)\n        in case you use it with normalize.css\n      */\nol,\nul {\n\tlist-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n\tmax-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n\tborder-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n\twhite-space: revert;\n}\n","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA,yFAAyF;;AAEzF,4FAA4F;AAC5F;CACC,UAAU;CACV,eAAe;AAChB;;AAEA,+BAA+B;AAC/B;;;CAGC,sBAAsB;AACvB;;AAEA;;;OAGO;AACP;;CAEC,gBAAgB;AACjB;;AAEA,wDAAwD;AACxD;CACC,eAAe;AAChB;;AAEA,4CAA4C;AAC5C;CACC,yBAAyB;AAC1B;;AAEA,sEAAsE;AACtE;CACC,mBAAmB;AACpB",sourcesContent:["/* Source: https://css-tricks.com/an-interview-with-elad-shechter-on-the-new-css-reset/ */\n\n/* Remove all the styles of the \"User-Agent-Stylesheet\", except for the 'display' property */\n*:where(:not(iframe, canvas, img, svg, video):not(svg *)) {\n\tall: unset;\n\tdisplay: revert;\n}\n\n/* Preferred box-sizing value */\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n\n/*\n        Remove list styles (bullets/numbers)\n        in case you use it with normalize.css\n      */\nol,\nul {\n\tlist-style: none;\n}\n\n/* For images to not be able to exceed their container */\nimg {\n\tmax-width: 100%;\n}\n\n/* Removes spacing between cells in tables */\ntable {\n\tborder-collapse: collapse;\n}\n\n/* Revert the 'white-space' property for textarea elements on Safari */\ntextarea {\n\twhite-space: revert;\n}\n"],sourceRoot:""}]);const a=s},402:(t,e,n)=>{n.d(e,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),s=n.n(i)()(r());s.push([t.id,".hover-dark {\n\t--hover: hsl(0deg 0% 90%);\n}\n\n.active {\n\tbackground-color: var(--hover);\n}\n\nhtml,\nbody {\n\theight: 100%;\n}\n\n.app {\n\tdisplay: grid;\n\tgrid-template-columns: 250px 1fr;\n\tgrid-template-rows: 80px 1fr;\n\tmin-height: 100%;\n}\n\nheader {\n\tdisplay: grid;\n\tgrid-column: span 2;\n\tcolor: #e6e6e6;\n\tbackground-color: hsl(207deg 90% 54%);\n}\n\n.grid-container {\n\tdisplay: grid;\n\tgrid-template-columns: 250px 1fr;\n}\n\n.title {\n\tdisplay: grid;\n\tplace-items: center;\n\tfont-size: 2rem;\n\tcolor: #e6e6e6;\n\tfont-weight: 700;\n\ttext-transform: capitalize;\n}\n\n.menu {\n\twidth: 100%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n\tdisplay: grid;\n\tplace-items: center end;\n}\n\n.menu__button {\n\tdisplay: none;\n\twidth: 50px;\n\tmargin-right: 0.5em;\n\tgap: 5px;\n\tgrid-template-rows: repeat(3, 1fr);\n\tcursor: pointer;\n\ttransition: box-shadow 0.2s linear;\n}\n\n.menu__button:hover {\n\tbox-shadow: 3px 2px 3px 0px #000;\n}\n\n.menu__button:active {\n\tbox-shadow: none;\n}\n.menu__button:focus-visible {\n\toutline: 2px solid hsl(340deg 82% 52%);\n}\n\n.button-part {\n\tborder-top: 10px solid #e6e6e6;\n}\n\nmain {\n\tbackground-color: hsl(0deg 0% 90%);\n\tpadding: 2em 0.5em;\n}\n\n.aside-wrapper {\n\tbackground-color: hsl(0deg 0% 95%);\n\tpadding: 2em 0.5em;\n}\n\naside {\n\twidth: 90%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n}\n\naside .list__item {\n\tcursor: pointer;\n}\n\n@media (max-width: 1024px) {\n\t.app {\n\t\tgrid-template-columns: 1fr;\n\t}\n\n\t.grid-container {\n\t\twidth: 90%;\n\t\tmax-width: 800px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.title {\n\t\tplace-items: center start;\n\t}\n\n\t.menu__button {\n\t\tdisplay: grid;\n\t}\n\n\t.aside-wrapper {\n\t\tdisplay: none;\n\t}\n}\n\n.projects__title {\n\tfont-size: 1.5rem;\n\tmargin-bottom: 0.5em;\n\tcolor: hsl(207deg 90% 54%);\n\tfont-weight: bold;\n\tpadding-left: 0.25em;\n}\n\n.form {\n\tdisplay: flex;\n\tgap: 0.5em;\n\tmargin-bottom: 1em;\n\tpadding-left: 0.25em;\n}\n\n.form__button {\n\tfont-size: 2rem;\n\tcursor: pointer;\n\tcolor: hsl(207deg 90% 54%);\n}\n\n.form__input {\n\tborder-bottom: 1px solid hsl(207deg 90% 54%);\n\torder: 1;\n\twidth: 100%;\n\talign-self: center;\n\tpadding: 0.25em;\n\tpadding-top: 0.4em;\n}\n\n.inbox {\n\twidth: 90%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n}\n\n.inbox__title {\n\tfont-size: 1.5rem;\n\tmargin-bottom: 0.5em;\n\tcolor: hsl(207deg 90% 54%);\n\tfont-weight: bold;\n\tpadding-left: 0.25em;\n}\n\n.list {\n\tmargin-bottom: 1em;\n}\n\n.list__item {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0.5em;\n\tborder-radius: 15px;\n}\n\n.list__item + .list__item {\n\tmargin-top: 0.5em;\n}\n\n.list__item:hover {\n\tbackground-color: var(--hover, hsl(0deg 0% 95%));\n}\n\n.title-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.25em;\n}\n\n.check-btn {\n\tbackground-color: hsl(207deg 100% 85%);\n\tborder: 2px solid hsl(207deg 90% 54%);\n\tborder-radius: 50%;\n\twidth: 1em;\n\theight: 1em;\n\tflex-shrink: 0;\n}\n\n[data-role] {\n\tcursor: pointer;\n}\n\n.date-input {\n\tborder: 1px solid hsl(207deg 90% 54%);\n\tbackground-color: hsl(207deg 100% 85%);\n\tpadding: 0.1em 0.25em;\n\tborder-radius: 5px;\n}\n\nfooter {\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 0.5em;\n\tgrid-row: -1;\n\tgrid-column: span 2;\n\tpadding: 0.5em;\n\tfont-size: 1.2rem;\n}\n\nfooter img {\n\tdisplay: block;\n}\n\n.github-icon {\n\tcursor: pointer;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n.menu-open {\n\tdisplay: block;\n}\n\n.mobile-layout {\n\tgrid-template-rows: 80px min-content 1fr;\n}\n\n.span-rows-3-4 {\n\tgrid-row: 3/4;\n}\n\n@media (min-width: 1024px) {\n\t.app {\n\t\tgrid-template-rows: 80px 1fr;\n\t}\n\n\t.main {\n\t\tgrid-row: initial;\n\t}\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;CACC,yBAAyB;AAC1B;;AAEA;CACC,8BAA8B;AAC/B;;AAEA;;CAEC,YAAY;AACb;;AAEA;CACC,aAAa;CACb,gCAAgC;CAChC,4BAA4B;CAC5B,gBAAgB;AACjB;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,cAAc;CACd,qCAAqC;AACtC;;AAEA;CACC,aAAa;CACb,gCAAgC;AACjC;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,eAAe;CACf,cAAc;CACd,gBAAgB;CAChB,0BAA0B;AAC3B;;AAEA;CACC,WAAW;CACX,gBAAgB;CAChB,cAAc;CACd,aAAa;CACb,uBAAuB;AACxB;;AAEA;CACC,aAAa;CACb,WAAW;CACX,mBAAmB;CACnB,QAAQ;CACR,kCAAkC;CAClC,eAAe;CACf,kCAAkC;AACnC;;AAEA;CACC,gCAAgC;AACjC;;AAEA;CACC,gBAAgB;AACjB;AACA;CACC,sCAAsC;AACvC;;AAEA;CACC,8BAA8B;AAC/B;;AAEA;CACC,kCAAkC;CAClC,kBAAkB;AACnB;;AAEA;CACC,kCAAkC;CAClC,kBAAkB;AACnB;;AAEA;CACC,UAAU;CACV,gBAAgB;CAChB,cAAc;AACf;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC;EACC,0BAA0B;CAC3B;;CAEA;EACC,UAAU;EACV,gBAAgB;EAChB,cAAc;CACf;;CAEA;EACC,yBAAyB;CAC1B;;CAEA;EACC,aAAa;CACd;;CAEA;EACC,aAAa;CACd;AACD;;AAEA;CACC,iBAAiB;CACjB,oBAAoB;CACpB,0BAA0B;CAC1B,iBAAiB;CACjB,oBAAoB;AACrB;;AAEA;CACC,aAAa;CACb,UAAU;CACV,kBAAkB;CAClB,oBAAoB;AACrB;;AAEA;CACC,eAAe;CACf,eAAe;CACf,0BAA0B;AAC3B;;AAEA;CACC,4CAA4C;CAC5C,QAAQ;CACR,WAAW;CACX,kBAAkB;CAClB,eAAe;CACf,kBAAkB;AACnB;;AAEA;CACC,UAAU;CACV,gBAAgB;CAChB,cAAc;AACf;;AAEA;CACC,iBAAiB;CACjB,oBAAoB;CACpB,0BAA0B;CAC1B,iBAAiB;CACjB,oBAAoB;AACrB;;AAEA;CACC,kBAAkB;AACnB;;AAEA;CACC,aAAa;CACb,8BAA8B;CAC9B,cAAc;CACd,mBAAmB;AACpB;;AAEA;CACC,iBAAiB;AAClB;;AAEA;CACC,gDAAgD;AACjD;;AAEA;CACC,aAAa;CACb,mBAAmB;CACnB,WAAW;AACZ;;AAEA;CACC,sCAAsC;CACtC,qCAAqC;CACrC,kBAAkB;CAClB,UAAU;CACV,WAAW;CACX,cAAc;AACf;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,qCAAqC;CACrC,sCAAsC;CACtC,qBAAqB;CACrB,kBAAkB;AACnB;;AAEA;CACC,WAAW;CACX,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,UAAU;CACV,YAAY;CACZ,mBAAmB;CACnB,cAAc;CACd,iBAAiB;AAClB;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,cAAc;AACf;;AAEA;CACC,wCAAwC;AACzC;;AAEA;CACC,aAAa;AACd;;AAEA;CACC;EACC,4BAA4B;CAC7B;;CAEA;EACC,iBAAiB;CAClB;AACD",sourcesContent:[".hover-dark {\n\t--hover: hsl(0deg 0% 90%);\n}\n\n.active {\n\tbackground-color: var(--hover);\n}\n\nhtml,\nbody {\n\theight: 100%;\n}\n\n.app {\n\tdisplay: grid;\n\tgrid-template-columns: 250px 1fr;\n\tgrid-template-rows: 80px 1fr;\n\tmin-height: 100%;\n}\n\nheader {\n\tdisplay: grid;\n\tgrid-column: span 2;\n\tcolor: #e6e6e6;\n\tbackground-color: hsl(207deg 90% 54%);\n}\n\n.grid-container {\n\tdisplay: grid;\n\tgrid-template-columns: 250px 1fr;\n}\n\n.title {\n\tdisplay: grid;\n\tplace-items: center;\n\tfont-size: 2rem;\n\tcolor: #e6e6e6;\n\tfont-weight: 700;\n\ttext-transform: capitalize;\n}\n\n.menu {\n\twidth: 100%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n\tdisplay: grid;\n\tplace-items: center end;\n}\n\n.menu__button {\n\tdisplay: none;\n\twidth: 50px;\n\tmargin-right: 0.5em;\n\tgap: 5px;\n\tgrid-template-rows: repeat(3, 1fr);\n\tcursor: pointer;\n\ttransition: box-shadow 0.2s linear;\n}\n\n.menu__button:hover {\n\tbox-shadow: 3px 2px 3px 0px #000;\n}\n\n.menu__button:active {\n\tbox-shadow: none;\n}\n.menu__button:focus-visible {\n\toutline: 2px solid hsl(340deg 82% 52%);\n}\n\n.button-part {\n\tborder-top: 10px solid #e6e6e6;\n}\n\nmain {\n\tbackground-color: hsl(0deg 0% 90%);\n\tpadding: 2em 0.5em;\n}\n\n.aside-wrapper {\n\tbackground-color: hsl(0deg 0% 95%);\n\tpadding: 2em 0.5em;\n}\n\naside {\n\twidth: 90%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n}\n\naside .list__item {\n\tcursor: pointer;\n}\n\n@media (max-width: 1024px) {\n\t.app {\n\t\tgrid-template-columns: 1fr;\n\t}\n\n\t.grid-container {\n\t\twidth: 90%;\n\t\tmax-width: 800px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.title {\n\t\tplace-items: center start;\n\t}\n\n\t.menu__button {\n\t\tdisplay: grid;\n\t}\n\n\t.aside-wrapper {\n\t\tdisplay: none;\n\t}\n}\n\n.projects__title {\n\tfont-size: 1.5rem;\n\tmargin-bottom: 0.5em;\n\tcolor: hsl(207deg 90% 54%);\n\tfont-weight: bold;\n\tpadding-left: 0.25em;\n}\n\n.form {\n\tdisplay: flex;\n\tgap: 0.5em;\n\tmargin-bottom: 1em;\n\tpadding-left: 0.25em;\n}\n\n.form__button {\n\tfont-size: 2rem;\n\tcursor: pointer;\n\tcolor: hsl(207deg 90% 54%);\n}\n\n.form__input {\n\tborder-bottom: 1px solid hsl(207deg 90% 54%);\n\torder: 1;\n\twidth: 100%;\n\talign-self: center;\n\tpadding: 0.25em;\n\tpadding-top: 0.4em;\n}\n\n.inbox {\n\twidth: 90%;\n\tmax-width: 800px;\n\tmargin: 0 auto;\n}\n\n.inbox__title {\n\tfont-size: 1.5rem;\n\tmargin-bottom: 0.5em;\n\tcolor: hsl(207deg 90% 54%);\n\tfont-weight: bold;\n\tpadding-left: 0.25em;\n}\n\n.list {\n\tmargin-bottom: 1em;\n}\n\n.list__item {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0.5em;\n\tborder-radius: 15px;\n}\n\n.list__item + .list__item {\n\tmargin-top: 0.5em;\n}\n\n.list__item:hover {\n\tbackground-color: var(--hover, hsl(0deg 0% 95%));\n}\n\n.title-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.25em;\n}\n\n.check-btn {\n\tbackground-color: hsl(207deg 100% 85%);\n\tborder: 2px solid hsl(207deg 90% 54%);\n\tborder-radius: 50%;\n\twidth: 1em;\n\theight: 1em;\n\tflex-shrink: 0;\n}\n\n[data-role] {\n\tcursor: pointer;\n}\n\n.date-input {\n\tborder: 1px solid hsl(207deg 90% 54%);\n\tbackground-color: hsl(207deg 100% 85%);\n\tpadding: 0.1em 0.25em;\n\tborder-radius: 5px;\n}\n\nfooter {\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 0.5em;\n\tgrid-row: -1;\n\tgrid-column: span 2;\n\tpadding: 0.5em;\n\tfont-size: 1.2rem;\n}\n\nfooter img {\n\tdisplay: block;\n}\n\n.github-icon {\n\tcursor: pointer;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n.menu-open {\n\tdisplay: block;\n}\n\n.mobile-layout {\n\tgrid-template-rows: 80px min-content 1fr;\n}\n\n.span-rows-3-4 {\n\tgrid-row: 3/4;\n}\n\n@media (min-width: 1024px) {\n\t.app {\n\t\tgrid-template-rows: 80px 1fr;\n\t}\n\n\t.main {\n\t\tgrid-row: initial;\n\t}\n}\n"],sourceRoot:""}]);const a=s},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(s[A]=!0)}for(var d=0;d<t.length;d++){var c=[].concat(t[d]);o&&s[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},s=[],a=0;a<t.length;a++){var A=t[a],d=o.base?A[0]+o.base:A[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var p=n(l),C={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=r(C,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:u,references:1})}s.push(l)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=n(i[s]);e[a].references--}for(var A=o(t,r),d=0;d<i.length;d++){var c=n(i[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=n(379),e=n.n(t),o=n(795),r=n.n(o),i=n(569),s=n.n(i),a=n(565),A=n.n(a),d=n(216),c=n.n(d),l=n(589),p=n.n(l),C=n(538),u={};u.styleTagTransform=p(),u.setAttributes=A(),u.insert=s().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=c(),e()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals;var m=n(402),h={};h.styleTagTransform=p(),h.setAttributes=A(),h.insert=s().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),e()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const g=class{static events={};static subscribe(t,e){this.events[t]||(this.events[t]=[]),this.events[t].push(e)}static unsubscribe(t,e){this.events[t]&&(this.events[t]=this.events[t].filter((t=>t!==e)))}static publish(t,e){this.events[t]&&this.events[t].forEach((t=>{t(e)}))}};function b(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function f(t){b(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new Date(t.getTime()):"number"==typeof t||"[object Number]"===e?new Date(t):("string"!=typeof t&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function B(t){b(1,arguments);var e=f(t);return e.setHours(0,0,0,0),e}function y(t,e){b(2,arguments);var n=B(t),o=B(e);return n.getTime()===o.getTime()}function v(t){return b(1,arguments),y(t,Date.now())}function w(t){if(null===t||!0===t||!1===t)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function x(t,e){b(1,arguments);var n=e||{},o=n.locale,r=o&&o.options&&o.options.weekStartsOn,i=null==r?0:w(r),s=null==n.weekStartsOn?i:w(n.weekStartsOn);if(!(s>=0&&s<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var a=f(t),A=a.getDay(),d=(A<s?7:0)+A-s;return a.setDate(a.getDate()-d),a.setHours(0,0,0,0),a}function E(t,e,n){b(2,arguments);var o=x(t,n),r=x(e,n);return o.getTime()===r.getTime()}function D(t,e){return b(1,arguments),E(t,Date.now(),e)}var _,k=new Uint8Array(16);function T(){if(!_&&!(_="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return _(k)}const j=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,S=function(t){return"string"==typeof t&&j.test(t)};for(var P=[],I=0;I<256;++I)P.push((I+256).toString(16).substr(1));const L=function(t,e,n){var o=(t=t||{}).random||(t.rng||T)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){n=n||0;for(var r=0;r<16;++r)e[n+r]=o[r];return e}return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(P[t[e+0]]+P[t[e+1]]+P[t[e+2]]+P[t[e+3]]+"-"+P[t[e+4]]+P[t[e+5]]+"-"+P[t[e+6]]+P[t[e+7]]+"-"+P[t[e+8]]+P[t[e+9]]+"-"+P[t[e+10]]+P[t[e+11]]+P[t[e+12]]+P[t[e+13]]+P[t[e+14]]+P[t[e+15]]).toLowerCase();if(!S(n))throw TypeError("Stringified UUID is invalid");return n}(o)},O=document.querySelector(".projects"),q=document.querySelector(".inbox"),N=document.querySelector("aside"),R=new class{constructor(){g.subscribe("DATA_INITIALIZED",this.update.bind(this)),g.subscribe("PROJECT_SWITCHED",this.update.bind(this))}render(t){const e=document.querySelector("#inbox-list-template").content.cloneNode(!0);t.insertBefore(e,t.firstChild),this.domNode=document.querySelector("[data-id='0']")}update({currentProject:t}){"Inbox"===t?this.domNode.classList.add("active"):this.domNode.classList.remove("active")}},W=new class{render(t){const e=document.querySelector("#project-form-template").content.cloneNode(!0);t.appendChild(e)}},U=new class{constructor(){g.subscribe("DATA_INITIALIZED",this.update.bind(this)),g.subscribe("PROJECT_ADDED",this.update.bind(this)),g.subscribe("PROJECT_SWITCHED",this.update.bind(this))}render(t){const e=document.querySelector("#project-list-template").content.cloneNode(!0);t.appendChild(e),this.domNode=document.querySelector(".projects .list")}update({currentProject:t,appData:e}){this.domNode.innerHTML=null;const n=new DocumentFragment,o=["Inbox","Today","This Week"];e.forEach((({title:e,id:r})=>{if(o.includes(e))return;const i=document.createElement("li");i.classList.add("list__item"),i.textContent=e,i.setAttribute("data-id",r),n.appendChild(i),e===t&&i.classList.add("active")})),this.domNode.appendChild(n)}},z=new class{render(t){const e=document.querySelector("#todo-form-template").content.cloneNode(!0);t.appendChild(e)}},F=new class{constructor(){g.subscribe("DATA_INITIALIZED",this.update.bind(this)),g.subscribe("TODO_ADDED",this.update.bind(this)),g.subscribe("TODO_REMOVED",this.update.bind(this)),g.subscribe("DATE_SET",this.update.bind(this)),g.subscribe("PROJECT_SWITCHED",this.update.bind(this))}render(t){const e=document.querySelector("#todo-list-template").content.cloneNode(!0);t.appendChild(e),this.domNode=document.querySelector(".inbox .list")}update({currentProject:t,appData:e}){const n=document.querySelector("#todo-form");let o=e.find((({title:e})=>e===t)).todos;switch(t){case"Today":o=o.filter((({dueDate:t})=>v(new Date(t)))),n.style.display="none";break;case"This Week":o=o.filter((({dueDate:t})=>D(new Date(t)))),n.style.display="none";break;default:n.style.display="flex"}this.domNode.innerHTML=null;const r=new DocumentFragment,i=document.createElement("h2");i.classList.add("inbox__title"),i.textContent=t,r.appendChild(i),o.sort(((t,e)=>function(t,e){b(2,arguments);var n=f(t),o=f(e),r=n.getTime()-o.getTime();return r<0?-1:r>0?1:r}(new Date(t.dueDate),new Date(e.dueDate)))),o.forEach((({title:e,id:n,dueDate:o,fromProject:i})=>{const s=document.createElement("li");s.classList.add("list__item"),s.setAttribute("data-id",n);const a=document.createElement("div");a.classList.add("check-btn"),a.setAttribute("data-role","check-button");const A=document.createElement("p");A.textContent=e;const d=document.createElement("p");d.setAttribute("data-role","date"),d.classList.add("date-paragraph"),d.textContent=o;const c=document.createElement("input");c.setAttribute("type","date"),c.classList.add("hidden","date-input");const l=document.createElement("div");if(l.classList.add("title-container"),l.appendChild(a),l.appendChild(A),i&&"Today"==t||"This Week"==t){const t=document.createElement("p");t.textContent=`(from: ${i})`,t.style.color="hsl(207deg 90% 54%)",l.appendChild(t)}s.appendChild(l),s.appendChild(d),s.appendChild(c),r.appendChild(s)})),this.domNode.appendChild(r)}};R.render(N),W.render(O),U.render(O),F.render(q),z.render(q),new class{constructor(t){this.inbox={title:"Inbox",id:0,todos:[]},this.today={title:"Today",id:1,todos:[]},this.thisWeek={title:"This Week",id:2,todos:[]},this.currentProject="Inbox",this.storage=t,this.appData=t.get("APP_DATA")||[this.inbox,this.today,this.thisWeek],this.isMenuOpen=!1,g.publish("DATA_INITIALIZED",{currentProject:this.currentProject,appData:this.appData})}addTodo(t){if(!t.title)return;const e=this.appData.find((({title:t})=>t===this.currentProject));e.todos.some((({title:e})=>t.title===e))||(e.todos.push(t),this.storage.set("APP_DATA",this.appData),g.publish("TODO_ADDED",{currentProject:this.currentProject,appData:this.appData}))}removeTodo(t){this.appData.forEach((e=>{e.todos=e.todos.filter((({id:e})=>e!==t))})),this.storage.set("APP_DATA",this.appData),g.publish("TODO_REMOVED",{currentProject:this.currentProject,appData:this.appData})}setTodoDate(t,{target:e}){const n=e.value,o=this.appData.find((({title:t})=>t===this.currentProject)),r=o.todos.find((({id:e})=>e===t));r.dueDate=n,v(new Date(r.dueDate))&&this.updateTodayInbox(r,o.title),D(new Date(r.dueDate))&&this.updateThisWeekInbox(r,o.title),this.appData.forEach((t=>{t.todos.forEach((({id:t,dueDate:e})=>{}))})),this.storage.set("APP_DATA",this.appData),g.publish("DATE_SET",{currentProject:this.currentProject,appData:this.appData})}updateTodayInbox(t,e){const n=this.appData.find((({title:t})=>"Today"===t)).todos;n.some((({id:e})=>t.id===e))||(t.fromProject=e,n.push(t))}updateThisWeekInbox(t,e){const n=this.appData.find((({title:t})=>"This Week"===t)).todos;n.some((({id:e})=>t.id===e))||(t.fromProject=e,n.push(t))}addProject(t){this.appData.some((({title:e})=>t.title===e))||(this.appData.push(t),this.storage.set("APP_DATA",this.appData),g.publish("PROJECT_ADDED",{currentProject:this.currentProject,appData:this.appData}))}closeDateInputs(t){document.querySelectorAll(".date-input:not(.hidden)").forEach((e=>{const n=e.closest(".list__item").querySelector(".date-paragraph");n!==t&&(e.classList.add("hidden"),n.classList.remove("hidden"))}))}handleTodoSubmit(t){t.preventDefault();const e=new FormData(this.todoForm).get("todo"),n=class{static map(t){return{title:t,dueDate:"(no date)",id:L()}}}.map(e);this.addTodo(n),this.todoForm.reset()}handleProjectSubmit(t){t.preventDefault();const e=new FormData(this.projectForm).get("project"),n=class{static map(t){return{title:t,id:L(),todos:[]}}}.map(e);this.addProject(n),this.projectForm.reset()}handleProjectClick({target:t}){if(!t.classList.contains("list__item"))return;const e=t.textContent;this.currentProject=e,g.publish("PROJECT_SWITCHED",{currentProject:this.currentProject,appData:this.appData})}handleTodoClick({target:t}){const e=t.closest("li");if(!e)return;const n=e.dataset.id;switch(t.dataset.role){case"check-button":this.removeTodo(n);break;case"date":const o=e.querySelector(".date-input");o.classList.remove("hidden"),o.addEventListener("change",this.setTodoDate.bind(this,n)),t.classList.add("hidden")}}handleDocumentClick({target:t}){t.classList.contains("date-input")||this.closeDateInputs(t)}handleMenuClick(){this.isMenuOpen?(this.app.classList.remove("mobile-layout"),this.main.classList.remove("span-rows-3-4"),this.asideWrapper.classList.remove("menu-open")):(this.app.classList.add("mobile-layout"),this.main.classList.add("span-rows-3-4"),this.asideWrapper.classList.add("menu-open")),this.isMenuOpen=!this.isMenuOpen}initialize(){this.app=document.querySelector(".app"),this.main=document.querySelector(".main"),this.asideWrapper=document.querySelector(".aside-wrapper"),this.todoForm=document.querySelector("#todo-form"),this.projectForm=document.querySelector("#project-form"),this.todos=document.querySelector(".inbox .list"),this.projects=document.querySelector("aside"),this.menuBtn=document.querySelector(".menu__button"),this.todoForm.addEventListener("submit",this.handleTodoSubmit.bind(this)),this.projectForm.addEventListener("submit",this.handleProjectSubmit.bind(this)),this.todos.addEventListener("click",this.handleTodoClick.bind(this)),this.projects.addEventListener("click",this.handleProjectClick.bind(this)),this.menuBtn.addEventListener("click",this.handleMenuClick.bind(this)),document.addEventListener("click",this.handleDocumentClick.bind(this))}}(new class{constructor(){this.storage=localStorage}get(t){const e=localStorage.getItem(t);return JSON.parse(e)}set(t,e){const n=JSON.stringify(e);localStorage.setItem(t,n)}}).initialize()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,